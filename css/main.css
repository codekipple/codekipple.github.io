/*
    Vars
    ====
*/
/*
    colors
    ------
*/
/*
    Fonts
    -----
*/
/*
    Z-indexes
    ---------
    Keep track of z-index by assigning your elements z-index to
    one of these defined levels.
*/
/*
    Widths
    ------
*/
/*
    Spacing
    -----------
*/
/*  ==========================================================================
    Functions:Units
    ========================================================================== */
/*
    PX to EM
    --------

    Convert px to em

    $base-font-size is used as a default so when you use the em() function you don't have to provide
    a second parameter if your working with a element with the default font-size
*/
/*
    EM to PX
    --------

    Convert em to px
*/
/*  ==========================================================================
    Functions:Breakpoints
    ========================================================================== */
/*  ==========================================================================
    Mixins:Respond
    ==========================================================================

    Generate media queries.

    $respond-no-media-queries
    -------------------------
    set this global var in your stylesheet aimed at browsers which do
    not support media queries (ie8) to give them desktop styles only.

    This way they get all the styles but the cascade makes sure they display
    the desktop styles (if your using a mobile first approach to layering the media queries)
*/
/*  ==========================================================================
    Mixins:Rem
    ==========================================================================

    A small mixin for easy use of rem with px as fallback
    usage: @include x-rem(font-size, 14px)
    usage: @include x-rem(marign, 0 12px 2 1.2)
    usage: @include x-rem(padding, 1.5 24px)

    thanks to Eric Meyer for https://github.com/ericam/susy
    and Hans Christian Reinl for http://drublic.de/blog/rem-fallback-sass-less/

    set $base-font-size outside of the mixin in your variables file
*/
/*  ==========================================================================
    Base:Reset
    ========================================================================== */
/*
    1. Use border-box globally
*/
*,
*:after,
*:before {
  box-sizing: border-box;
  /* 1 */
}

/*
    1. reset some stuff
*/
p, blockquote, pre,
dl, dd, form, fieldset, legend,
table, th, td, caption,
hr {
  margin: 0;
  /* 1 */
  padding: 0;
  /* 1 */
}

/*
    1. Correct `block` display not defined for any HTML5 element in IE 8/9. - Normalize:v3.0.1
    1. Correct `block` display not defined for `details` or `summary` in IE 10/11 and Firefox. - Normalize:v3.0.1
    1. Correct `block` display not defined for `main` in IE 11. - Normalize:v3.0.1
*/
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
nav,
section,
summary {
  display: block;
  /* 1 */
}

/*
    1. Correct `inline-block` display not defined in IE 8/9. - Normalize:v3.0.1
    2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera. - Normalize:v3.0.1
*/
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */
}

/*
    1. Prevent modern browsers from displaying `audio` without controls. - Normalize:v3.0.1
    2. Remove excess height in iOS 5 devices. - Normalize:v3.0.1
*/
audio:not([controls]) {
  display: none;
  /* 1 */
  height: 0;
  /* 2 */
}

/*
    1. Address `[hidden]` styling not present in IE 8/9/10. - Normalize:v3.0.1
    2. Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22. - Normalize:v3.0.1
*/
[hidden],
template {
  /* 2 */
  display: none;
}

/*  ==========================================================================
    Base:Main
    ========================================================================== */
/*
    1. Prevent iOS text size adjust after orientation change, without disabling
       user zoom. - Normalize:v2.1.0
*/
html {
  -webkit-text-size-adjust: 100%;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 1 */
  font-size: 1em;
  line-height: 1.4;
  min-height: 100%;
  color: black;
  font-family: Monaco, Consolas, "Lucida Console", monospace;
  text-align: center;
}

/*
    1. Remove default margin. - Normalize:v2.1.0
*/
body {
  margin: 0;
  /* 1 */
  min-width: 18.75em;
  background: white;
}

/*  ==========================================================================
    Base:Headings
    ========================================================================== */
h1, h2, h3, h4, h5, h6 {
  line-height: 1.3;
  margin: 0 0 .8em 0;
  font-family: inherit;
}

h1 {
  font-size: 2em;
  margin: 0 0 .67em 0;
}

h2 {
  font-size: 1.625em;
}

h3 {
  font-size: 1.25em;
}

h4 {
  font-size: 1.1875em;
}

h5 {
  font-size: 1.125em;
}

h6 {
  font-size: 1.0625em;
}

/*  ==========================================================================
    Base:Links
    ========================================================================== */
/*
    1. Remove the gray background color from active links in IE 10. - Normalize:v3.0.1
    2. Improve readability when focused and also mouse hovered in all browsers. - Normalize:v3.0.1
*/
a {
  color: #65b03c;
  text-decoration: none;
  background: transparent;
  /* 1 */
  text-decoration: underline;
  transition: background-color .2s ease-out;
}

a:hover, a:focus {
  color: #bae0a5;
}

/*  ==========================================================================
    Base:Lists
    ========================================================================== */
ul,
ol {
  margin: 0 0 1.25em 0;
}

ul li,
ol li {
  margin-bottom: 0.25em;
}

ul {
  padding: 0 0 0 0.9375em;
}

ol {
  padding: 0 0 0 1.3125em;
}

/*
    Remove vertical spacing from nested lists.
*/
li > ul,
li > ol {
  margin-bottom: 0;
}

/*  ==========================================================================
    Base:Type
    ========================================================================== */
p {
  margin-bottom: 1.25em;
}

/*
    1. Remove underlines from potentially troublesome elements.
*/
u,
ins {
  text-decoration: none;
  /* 1 */
}

/*
    1. Apply faux underline via `border-bottom`.
*/
ins {
  border-bottom: 1px solid;
  /* 1 */
}

/*
    1. Give a help cursor to elements that give extra info on `:hover`.
*/
abbr[title],
dfn[title] {
  cursor: help;
  /* 1 */
}

/*
    1. Address styling not present in IE 8/9, Safari 5, and Chrome. - Normalize:v3.0.1
*/
abbr[title] {
  border-bottom: 1px dotted;
  /* 1 */
}

/*
    1. Address style set to `bolder` in Firefox 4+, Safari 5, and Chrome. - Normalize:v3.0.1
*/
b,
strong {
  font-weight: bold;
  /* 1 */
}

/*
    1. Address styling not present in Safari 5 and Chrome. - Normalize:v3.0.1
*/
dfn {
  font-style: italic;
  /* 1 */
}

/*
    Address styling not present in IE 8/9. - Normalize:v3.0.1
*/
mark {
  background: #ff0;
  /* 1 */
  color: #000;
  /* 1 */
}

/*
    1. Set consistent quote types. - Normalize:v2.1.0
*/
q {
  quotes: "\201C" "\201D" "\2018" "\2019";
  /* 1 */
}

/*
    1. Address inconsistent and variable font size in all browsers. - Normalize:v3.0.1
*/
small {
  font-size: 80%;
  /* 1 */
}

/*
    1:sub-sup. Prevent `sub` and `sup` affecting `line-height` in all browsers. - Normalize:v3.0.1
*/
sub,
sup {
  font-size: 75%;
  /* 1:sub-sup */
  line-height: 0;
  /* 1:sub-sup */
  position: relative;
  /* 1:sub-sup */
  vertical-align: baseline;
  /* 1:sub-sup */
}

sup {
  top: -0.5em;
  /* 1:sub-sup */
}

sub {
  bottom: -0.25em;
  /* 1:sub-sup */
}

/*  ==========================================================================
    Objects:Bare List
    ========================================================================== */
.bare-list {
  margin: 0;
  padding: 0;
  list-style: none;
}

.bare-list li {
  margin: 0;
  padding: 0;
}

/*  ==========================================================================
    Objects:Nav
    ==========================================================================

    Nav abstraction as per: csswizardry.com/2011/09/the-nav-abstraction
    When used on an `ol` or `ul`, this class throws the list into horizontal mode
    e.g.:

    <ul class=nav>
        <li><a href=#>Home</a></li>
        <li><a href=#>About</a></li>
        <li><a href=#>Portfolio</a></li>
        <li><a href=#>Contact</a></li>
    </ul>

    Demo: jsfiddle.net/inuitcss/Vnph4

*/
/*
    1:  Set line-height so positing does not dependent on the global line-height set on the html element.
        Overwrite this value on a particular nav if you need to.

        This way if the global line-height changes it does not effect the navigations position.
*/
.nav {
  margin: 0;
  padding: 0;
  list-style: none;
  line-height: 1em;
  /* 1 */
}

.nav > li,
.nav > li > a {
  display: inline-block;
}

/*
    .nav--stacked
    -------------
    extends .nav and throws the list into vertical mode, e.g.:

    <ul class="nav  nav--stacked">
        <li><a href=#>Home</a></li>
        <li><a href=#>About</a></li>
        <li><a href=#>Portfolio</a></li>
       <li><a href=#>Contact</a></li>
    </ul>

*/
.nav--stacked > li {
  display: list-item;
}

.nav--stacked > li > a {
  display: block;
}

/*
    Force a nav to occupy 100% of the available width of its parent. Extends
    .nav, e.g.:

    <ul class="nav  nav--fit">
        <li><a href=#>Home</a></li>
        <li><a href=#>About</a></li>
        <li><a href=#>Portfolio</a></li>
       <li><a href=#>Contact</a></li>
    </ul>

    Thanks to @pimpl for this idea!
*/
.nav--fit {
  display: table;
  width: 100%;
}

.nav--fit > li {
  display: table-cell;
}

.nav--fit > li > a {
  display: block;
}

/*
    Make a list of keywords. Extends `.nav`, e.g.:

    <ul class="nav  nav--keywords>

*/
.nav--keywords > li:after {
  content: ", ";
}

.nav--keywords > li:last-child:after {
  display: none;
}

.constrict {
  max-width: 810px;
  max-width: 50.625rem;
  padding-left: 10px;
  padding-left: 0.625rem;
  padding-right: 10px;
  padding-right: 0.625rem;
  margin: 0 auto;
  display: block;
}

h1 {
  line-height: 1;
}

h1 span {
  font-size: 0.625em;
}

.section-title--h1 {
  margin-top: 1.15385em;
  margin-bottom: 1.15385em;
  margin-left: -0.38462em;
  margin-right: -0.38462em;
  padding: 0.19231em 0.38462em;
  background: black;
  color: #c2af75;
  color: black;
  background: #e1d8bc;
}

.section-title--h2 {
  margin-bottom: 0.75em;
}

.logo {
  max-width: 30em;
  color: #c2af75;
  text-align: left;
  float: left;
}

.logo .logo__text {
  font-size: 1em;
}

.logo__dot {
  font-size: 0.75em;
  line-height: 1;
  display: inline-block;
  margin: 0 .01em;
  position: relative;
  top: .1em;
}

/*
    main nav
*/
.main-nav a {
  padding: .3em;
}

.page-head {
  background: #000;
  padding-top: 1.25em;
  padding-bottom: 1.25em;
}

.page-foot {
  padding-top: 1.25em;
  padding-bottom: 1.25em;
  color: #c2af75;
  text-align: left;
  font-size: 1em;
  margin-top: 6.25em;
  border-top: 1px solid #eee;
}

.timeline {
  border-top: 1px solid #000;
  margin-bottom: 2.5em;
  padding: 0;
}

.timeline-event {
  position: relative;
  border-bottom: 2px solid #c2af75;
  padding-left: 1.25em;
}

@media (min-width: 43.75em) {
  .timeline-event {
    padding-left: 20%;
  }
}

.timeline-event__wrap {
  border-left: 2px solid #c2af75;
  padding: 0.9375em 1.875em;
}

.timeline-event__title {
  position: relative;
  font-size: 1.25em;
  left: -1.5em;
  padding-left: 1.5em;
}

.timeline-event__title:after {
  content: '';
  display: block;
  width: 25px;
  height: 25px;
  background: white;
  border-radius: 25px;
  border: 3px solid #c2af75;
  position: absolute;
  top: 2px;
  left: -13px;
}

.timeline-event__date {
  font-size: 0.875em;
  margin-bottom: 0.71429em;
  word-wrap: break-word;
  border-bottom: 1px dashed #000;
  display: inline-block;
}

@media (min-width: 43.75em) {
  .timeline-event__date {
    position: absolute;
    top: 1.42857em;
    left: 0;
    width: 20%;
    padding: 0 0.35714em;
    border: none;
  }
  .timeline-event__date span {
    display: block;
  }
}

/*  ==========================================================================
    Generic:Helpers:Layout
    ========================================================================== */
/*
    Contain floats
    --------------

    Make an element expand to contain floated children.
    Uses pseudo-elements (micro clearfix).

    1. The space content is one way to avoid an Opera bug when the
        `contenteditable` attribute is included anywhere else in the document.
        Otherwise it causes space to appear at the top and bottom of the
        element.
    2. The use of `table` rather than `block` is only necessary if using
        `:before` to contain the top-margins of child elements.
 */
.cf:before, .nav:before, .cf:after, .nav:after,
.group:before,
.group:after {
  content: "";
  /* 1 */
  display: table;
  /* 2 */
}

.cf:after, .nav:after,
.group:after {
  clear: both;
}

/*
    Floats
*/
.float--right {
  float: right !important;
}

.float--left {
  float: left !important;
}

/*  ==========================================================================
    Generic:Helpers:Text
    ========================================================================== */
/*
    Text alignment
*/
.text--left {
  text-align: left  !important;
}

.text--center {
  text-align: center !important;
}

.text--right {
  text-align: right !important;
}

/*
    Apply capital case to an element (usually a `strong`).
*/
.caps {
  text-transform: uppercase !important;
}

/**
 * Font weights
 */
.weight--light {
  font-weight: 300 !important;
}

.weight--normal {
  font-weight: 400 !important;
}

.weight--semibold {
  font-weight: 600 !important;
}

/*
    font sizes
*/
.alpha {
  font-size: 2em;
}

.beta {
  font-size: 1.625em;
}

.gamma {
  font-size: 1.25em;
}

.delta {
  font-size: 1.1875em;
}

.epsilon {
  font-size: 1.125em;
}

.zeta {
  font-size: 1.0625em;
}

/*  ==========================================================================
    Generic:Helpers:Spacing
    ========================================================================== */
/*
    add/remove margins
    ------------------
*/
.push {
  margin: 2.5em !important;
}

.push--top {
  margin-top: 2.5em !important;
}

.push--right {
  margin-right: 2.5em !important;
}

.push--bottom {
  margin-bottom: 2.5em !important;
}

.push--left {
  margin-left: 2.5em !important;
}

.push--ends {
  margin-top: 2.5em !important;
  margin-bottom: 2.5em !important;
}

.push--sides {
  margin-right: 2.5em !important;
  margin-left: 2.5em !important;
}

.push-half {
  margin: 1.25em !important;
}

.push-half--top {
  margin-top: 1.25em !important;
}

.push-half--right {
  margin-right: 1.25em !important;
}

.push-half--bottom {
  margin-bottom: 1.25em !important;
}

.push-half--left {
  margin-left: 1.25em !important;
}

.push-half--ends {
  margin-top: 1.25em !important;
  margin-bottom: 1.25em !important;
}

.push-half--sides {
  margin-right: 1.25em !important;
  margin-left: 1.25em !important;
}

.flush {
  margin: 0 !important;
}

.flush--top {
  margin-top: 0 !important;
}

.flush--right {
  margin-right: 0 !important;
}

.flush--bottom {
  margin-bottom: 0 !important;
}

.flush--left {
  margin-left: 0 !important;
}

.flush--ends {
  margin-top: 0 !important;
  margin-bottom: 0 !important;
}

.flush--sides {
  margin-right: 0 !important;
  margin-left: 0 !important;
}

/*
    remove paddings
    ---------------
    I don't find myself wanting to add padding via a helper class so i only have classes for removing
*/
.hard {
  padding: 0 !important;
}

.hard--top {
  padding-top: 0 !important;
}

.hard--right {
  padding-right: 0 !important;
}

.hard--bottom {
  padding-bottom: 0 !important;
}

.hard--left {
  padding-left: 0 !important;
}

.hard--ends {
  padding-top: 0 !important;
  padding-bottom: 0 !important;
}

.hard--sides {
  padding-right: 0 !important;
  padding-left: 0 !important;
}
