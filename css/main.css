/*
    Vars
    ====
*/
/*
    Global Breakpoints
    ------------------
*/
/*
    colors
    ------
*/
/*
    Fonts
    -----
*/
/*
    Z-indexes
    ---------
*/
/*
    Widths
    ------
*/
/*
    Spacing
    -----------
*/
/*  ==========================================================================
    Functions:Units
    ========================================================================== */
/*
    PX to EM
    --------

    Convert px to em

    $base-font-size is used as a default so when you use the em() function you don't have to provide
    a second parameter if your working with a element with the default font-size
*/
/*
    EM to PX
    --------

    Convert em to px
*/
/*  ==========================================================================
    Functions:Breakpoints
    ========================================================================== */
/*  ==========================================================================
    Mixins:Respond
    ==========================================================================

    Generate media queries.

    $respond-no-media-queries
    -------------------------
    set this global var in your stylesheet aimed at browsers which do
    not support media queries (ie8) to give them desktop styles only.

    This way they get all the styles but the cascade makes sure they display
    the desktop styles (if your using a mobile first approach to layering the media queries)
*/
/*  ==========================================================================
    Mixins:Rem
    ==========================================================================

    A small mixin for easy use of rem with px as fallback
    usage: @include x-rem(font-size, 14px)
    usage: @include x-rem(marign, 0 12px 2 1.2)
    usage: @include x-rem(padding, 1.5 24px)

    thanks to Eric Meyer for https://github.com/ericam/susy
    and Hans Christian Reinl for http://drublic.de/blog/rem-fallback-sass-less/

    set $base-font-size outside of the mixin in your variables file
*/
/*  ==========================================================================
    Base:Reset
    ========================================================================== */
/*
    1. Use border-box globally
*/
*, *:after, *:before {
  -moz-box-sizing: border-box;
       box-sizing: border-box
  /* 1 */ }

/*
    1. reset some stuff
*/
p, blockquote, pre, dl, dd, form, fieldset, legend, table, th, td, caption, hr {
  margin: 0;
  /* 1 */
  padding: 0
  /* 1 */ }

/*
    1. Correct `block` display not defined for any HTML5 element in IE 8/9. - Normalize:v3.0.1
    1. Correct `block` display not defined for `details` or `summary` in IE 10/11 and Firefox. - Normalize:v3.0.1
    1. Correct `block` display not defined for `main` in IE 11. - Normalize:v3.0.1
*/
article, aside, details, figcaption, figure, footer, header, hgroup, main, nav, section, summary {
  display: block
  /* 1 */ }

/*
    1. Correct `inline-block` display not defined in IE 8/9. - Normalize:v3.0.1
    2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera. - Normalize:v3.0.1
*/
audio, canvas, progress, video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline
  /* 2 */ }

/*
    1. Prevent modern browsers from displaying `audio` without controls. - Normalize:v3.0.1
    2. Remove excess height in iOS 5 devices. - Normalize:v3.0.1
*/
audio:not([controls]) {
  display: none;
  /* 1 */
  height: 0
  /* 2 */ }

/*
    1. Address `[hidden]` styling not present in IE 8/9/10. - Normalize:v3.0.1
    2. Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22. - Normalize:v3.0.1
*/
[hidden], template {
  /* 2 */
  display: none; }

/*  ==========================================================================
    Base:Main
    ========================================================================== */
/*
    1. Prevent iOS text size adjust after orientation change, without disabling
       user zoom. - Normalize:v2.1.0
*/
html {
  -webkit-text-size-adjust: 100%;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 1 */
  font-size: 1em;
  line-height: 1.4;
  min-height: 100%;
  color: black;
  font-family: Monaco, Consolas, "Lucida Console", monospace;
  text-align: center; }

/*
    1. Remove default margin. - Normalize:v2.1.0
*/
body {
  margin: 0;
  /* 1 */
  min-width: 18.75em;
  background: white; }

/*  ==========================================================================
    Base:Headings
    ========================================================================== */
h1, h2, h3, h4, h5, h6 {
  line-height: 1.3;
  margin: 0 0 0.8em 0;
  font-family: inherit; }

h1 {
  font-size: 2em;
  margin: 0 0 0.67em 0; }

h2 {
  font-size: 1.625em; }

h3 {
  font-size: 1.375em; }

h4 {
  font-size: 1.25em; }

h5 {
  font-size: 1.125em; }

h6 {
  font-size: 1.0625em; }

/*  ==========================================================================
    Base:Links
    ========================================================================== */
/*
    1. Remove the gray background color from active links in IE 10. - Normalize:v3.0.1
    2. Improve readability when focused and also mouse hovered in all browsers. - Normalize:v3.0.1
*/
a {
  color: #65b03c;
  text-decoration: none;
  background: transparent;
  /* 1 */
  text-decoration: underline;
  -webkit-transition: background-color 0.2s ease-out;
          transition: background-color 0.2s ease-out; }
  a:hover, a:focus {
    color: #bae0a5; }

/*  ==========================================================================
    Base:Lists
    ========================================================================== */
ul, ol {
  margin: 0 0 1.25em 0; }
  ul li, ol li {
    margin-bottom: 0.25em; }

ul {
  padding: 0 0 0 0.9375em; }

ol {
  padding: 0 0 0 1.3125em; }

/*
    Remove vertical spacing from nested lists.
*/
li > ul, li > ol {
  margin-bottom: 0; }

/*  ==========================================================================
    Base:Images
    ========================================================================== */
/*
    1. So that `alt` text is visually offset if images donâ€™t load.
    2. Fluid images.
    3. Remove border when inside `a` element in IE 8/9. - Normalize:v3.0.1
*/
img {
  font-style: italic;
  /* 1 */
  max-width: 100%;
  /* 2 */
  border: 0
  /* 3 */ }

/*
    Images in `figure` elements.
*/
figure > img {
  display: block; }

/*  ==========================================================================
    Base:Type
    ========================================================================== */
p {
  margin-bottom: 1.25em; }

/*
    1. Remove underlines from potentially troublesome elements.
*/
u, ins {
  text-decoration: none
  /* 1 */ }

/*
    1. Apply faux underline via `border-bottom`.
*/
ins {
  border-bottom: 1px solid
  /* 1 */ }

/*
    1. Give a help cursor to elements that give extra info on `:hover`.
*/
abbr[title], dfn[title] {
  cursor: help
  /* 1 */ }

/*
    1. Address styling not present in IE 8/9, Safari 5, and Chrome. - Normalize:v3.0.1
*/
abbr[title] {
  border-bottom: 1px dotted
  /* 1 */ }

/*
    1. Address style set to `bolder` in Firefox 4+, Safari 5, and Chrome. - Normalize:v3.0.1
*/
b, strong {
  font-weight: bold
  /* 1 */ }

/*
    1. Address styling not present in Safari 5 and Chrome. - Normalize:v3.0.1
*/
dfn {
  font-style: italic
  /* 1 */ }

/*
    Address styling not present in IE 8/9. - Normalize:v3.0.1
*/
mark {
  background: #ff0;
  /* 1 */
  color: #000
  /* 1 */ }

/*
    1. Set consistent quote types. - Normalize:v2.1.0
*/
q {
  quotes: "\201C" "\201D" "\2018" "\2019"
  /* 1 */ }

/*
    1. Address inconsistent and variable font size in all browsers. - Normalize:v3.0.1
*/
small {
  font-size: 80%
  /* 1 */ }

/*
    1:sub-sup. Prevent `sub` and `sup` affecting `line-height` in all browsers. - Normalize:v3.0.1
*/
sub, sup {
  font-size: 75%;
  /* 1:sub-sup */
  line-height: 0;
  /* 1:sub-sup */
  position: relative;
  /* 1:sub-sup */
  vertical-align: baseline
  /* 1:sub-sup */ }

sup {
  top: -0.5em
  /* 1:sub-sup */ }

sub {
  bottom: -0.25em
  /* 1:sub-sup */ }

/*  ==========================================================================
    Base:Forms
    ========================================================================== */
/*
    labels
*/
label {
  display: inline-block;
  margin-bottom: 0.7em; }

/*
    1. Give form elements some cursor interactions...
*/
label, input, textarea, button, select, option {
  cursor: pointer
  /* 1 */ }

.text-input:active, .text-input:focus, textarea:active, textarea:focus {
  cursor: text;
  /* 1 */
  outline: none
  /* 1 */ }

/*
    Known limitation: by default, Chrome and Safari on OS X allow very limited
    styling of `select`, unless a `border` property is set.

    1. Correct color not being inherited.
       Known issue: affects color of disabled elements. - Normalize:v3.0.1
    2. Correct font properties not being inherited. - Normalize:v3.0.1
    3. Address margins set differently in Firefox 4+, Safari, and Chrome. - Normalize:v3.0.1
*/
button, input, optgroup, select, textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0
  /* 3 */ }

/*
    1. Address `overflow` set to `hidden` in IE 8/9/10/11. - Normalize:v3.0.1
*/
button {
  overflow: visible
  /* 1 */ }

/*
    1. Address inconsistent `text-transform` inheritance for `button` and `select`.
       All other form control elements do not inherit `text-transform` values.
       Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
       Correct `select` style inheritance in Firefox. - Normalize:v3.0.1
*/
button, select {
  text-transform: none
  /* 1 */ }

/*
    1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
       and `video` controls. - Normalize:v3.0.1
    2. Correct inability to style clickable `input` types in iOS. - Normalize:v3.0.1
    3. Improve usability and consistency of cursor style between image-type
       `input` and others. - Normalize:v3.0.1
*/
button, html input[type="button"], input[type="reset"], input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer
  /* 3 */ }

/*
    1. Re-set default cursor for disabled elements. - Normalize:v3.0.1
*/
button[disabled], html input[disabled] {
  cursor: default; }

/*
    1. Remove inner padding and border in Firefox 4+. - Normalize:v3.0.1
*/
button::-moz-focus-inner, input::-moz-focus-inner {
  border: 0;
  /* 1 */
  padding: 0
  /* 1 */ }

/*
    1. Address Firefox 4+ setting `line-height` on `input` using `!important` in
       the UA stylesheet. - Normalize:v3.0.1
*/
input {
  line-height: normal
  /* 1 */ }

/*
    It's recommended that you don't attempt to style these elements.
    Firefox's implementation doesn't respect box-sizing, padding, or width.

    1. Address box sizing set to `content-box` in IE 8/9/10. - Normalize:v3.0.1
    2. Remove excess padding in IE 8/9/10. - Normalize:v3.0.1
*/
input[type="checkbox"], input[type="radio"] {
  -moz-box-sizing: border-box;
       box-sizing: border-box;
  /* 1 */
  padding: 0
  /* 2 */ }

/*
    1. Fix the cursor style for Chrome's increment/decrement buttons. For certain
       `font-size` values of the `input`, it causes the cursor style of the
       decrement button to change from `default` to `text`. - Normalize:v3.0.1
*/
input[type="number"]::-webkit-inner-spin-button, input[type="number"]::-webkit-outer-spin-button {
  height: auto
  /* 1 */ }

/*
    1. Address `appearance` set to `searchfield` in Safari and Chrome.
*/
input[type="search"] {
  -webkit-appearance: textfield
  /* 1 */ }

/*
    1. Remove inner padding and search cancel button in Safari and Chrome on OS X.
       Safari (but not Chrome) clips the cancel button when the search input has
       padding (and `textfield` appearance). - Normalize:v3.0.1
*/
input[type="search"]::-webkit-search-cancel-button, input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none
  /* 1 */ }

/*
    1. Define consistent border, margin, and padding. - Normalize:v3.0.1
*/
fieldset {
  border: 1px solid #c0c0c0;
  /* 1 */
  margin: 0 2px;
  /* 1 */
  padding: 0.35em 0.625em 0.75em
  /* 1 */ }

/*
    1. Correct `color` not being inherited in IE 8/9/10/11. - Normalize:v3.0.1
    2. Remove padding so people aren't caught out if they zero out fieldsets. - Normalize:v3.0.1
*/
legend {
  border: 0;
  /* 1 */
  padding: 0
  /* 2 */ }

/*
    1. Remove default vertical scrollbar in IE 8/9/10/11. - Normalize:v3.0.1
*/
textarea {
  overflow: auto
  /* 1 */ }

/*
    1. Don't inherit the `font-weight` (applied by a rule above).
       NOTE: the default cannot safely be changed in Chrome and Safari on OS X. - Normalize:v3.0.1
*/
optgroup {
  font-weight: bold
  /* 1 */ }

select {
  background-color: #ededed;
  border: 1px solid #bdbdbd; }

/*  ==========================================================================
    Base:Grouping
    ========================================================================== */
/*
    1. Address margin not present in IE 8/9 and Safari 5. - Normalize:v3.0.1
*/
figure {
  margin: 1em 40px
  /* 1 */ }

/*
    1. Address differences between Firefox and other browsers. - Normalize:v3.0.1
*/
hr {
  -moz-box-sizing: content-box;
  /* 1 */
  box-sizing: content-box;
  /* 1 */
  height: 0
  /* 1 */ }

/*
    1. Contain overflow in all browsers. - Normalize:v3.0.1
*/
pre {
  overflow: auto
  /* 1 */ }

/*
    1. Address odd `em`-unit font size rendering in all browsers. - Normalize:v2.1.0
*/
code, kbd, pre, samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em
  /* 1 */ }

/*  ==========================================================================
    Objects:Bare List
    ========================================================================== */
.bare-list {
  margin: 0;
  padding: 0;
  list-style: none; }
  .bare-list li {
    margin: 0;
    padding: 0; }

/*  ==========================================================================
    Objects:Grids
    ==========================================================================

    Fluid and nestable grid system, e.g.:

    <div class="grid">

        <div class="grid__cell one-third">
            <p>One third grid</p>
        </div><!--

     --><div class="grid__cell two-thirds">
            <p>Two thirds grid</p>
        </div><!--

     --><div class="grid__cell one-half">
            <p>One half grid</p>
        </div><!--

     --><div class="grid__cell one-quarter">
            <p>One quarter grid</p>
        </div><!--

     --><div class="grid__cell one-quarter">
            <p>One quarter grid</p>
        </div>

    </div>

*/
/*
    All content must be contained within child Grid-cell elements.

    1.  Account for browser defaults of elements that might be the root node of
        the component.
*/
.grid {
  display: block;
  /* 1 */
  padding: 0;
  /* 1 */
  margin: 0;
  /* 1 */
  margin-left: -2.5em; }

/*
    Very infrequently occurring grid wrappers as children of grid wrappers.
*/
.grid > .grid {
  margin-left: 0; }

/*
    No explicit width by default. Rely on combining `Grid-cell` with a dimension
    utility or a component class that extends 'grid'.

    1. Fundamentals of the non-float grid layout.
    2. Controls vertical positioning of units.
    3. Make cells full-width by default.
*/
.grid__cell {
  display: inline-block;
  /* 1 */
  vertical-align: top;
  /* 2 */
  width: 100%;
  /* 3 */
  padding-left: 2.5em; }

/**
 * Gutterless grids have all the properties of regular grids, minus any spacing.
 */
.grid--full {
  margin-left: 0; }
  .grid--full > .grid__cell {
    padding-left: 0; }

/*  ==========================================================================
    Objects:Nav
    ==========================================================================

    Nav abstraction as per: csswizardry.com/2011/09/the-nav-abstraction
    When used on an `ol` or `ul`, this class throws the list into horizontal mode
    e.g.:

    <ul class=nav>
        <li><a href=#>Home</a></li>
        <li><a href=#>About</a></li>
        <li><a href=#>Portfolio</a></li>
        <li><a href=#>Contact</a></li>
    </ul>

    Demo: jsfiddle.net/inuitcss/Vnph4

*/
/*
    1:  Set line-height so positing does not dependent on the global line-height set on the html element.
        Overwrite this value on a particular nav if you need to.

        This way if the global line-height changes it does not effect the navigations position.
*/
.nav {
  margin: 0;
  padding: 0;
  list-style: none;
  line-height: 1em
  /* 1 */ }
  .nav > li, .nav > li > a {
    display: inline-block; }

/*
    .nav--stacked
    -------------
    extends .nav and throws the list into vertical mode, e.g.:

    <ul class="nav  nav--stacked">
        <li><a href=#>Home</a></li>
        <li><a href=#>About</a></li>
        <li><a href=#>Portfolio</a></li>
       <li><a href=#>Contact</a></li>
    </ul>

*/
.nav--stacked > li {
  display: list-item; }
  .nav--stacked > li > a {
    display: block; }

/*
    Force a nav to occupy 100% of the available width of its parent. Extends
    .nav, e.g.:

    <ul class="nav  nav--fit">
        <li><a href=#>Home</a></li>
        <li><a href=#>About</a></li>
        <li><a href=#>Portfolio</a></li>
       <li><a href=#>Contact</a></li>
    </ul>

    Thanks to @pimpl for this idea!
*/
.nav--fit {
  display: table;
  width: 100%; }
  .nav--fit > li {
    display: table-cell; }
    .nav--fit > li > a {
      display: block; }

/*
    Make a list of keywords. Extends `.nav`, e.g.:

    <ul class="nav  nav--keywords>

*/
.nav--keywords > li:after {
  content: ", "; }
.nav--keywords > li:last-child:after {
  display: none; }

/*  ==========================================================================
    Objects:Aspect Ratio
    ==========================================================================

    This version was taken from the brilliant SUIT framework - suit-flex-embed v1.5.0 | MIT License | github.com/suitcss
    The class names were changed.

    Intrinsic ratio trick, aka 'The Padding-Bottom Hack' http://mobile.smashingmagazine.com/2013/09/16/responsive-images-performance-problem-case-study

    the ratio of the img-container is specified in each elements styles that takes use of this.

    * For use with media embeds such as videos, slideshows, or even images
    * that need to retain a specific aspect ratio but adapt to the width of their
    * containing element.

    To get the padding-bottom value: height / width * 100

    exampled usage:-

    <div class="aspect-ratio"></div>

    .aspect-ratio:before {
        $width: 500;
        $height: 340;
        padding-bottom: percentage($height/$width);
    }
*/
.aspect-ratio {
  display: block;
  overflow: hidden;
  position: relative; }

/**
 * A pseudo-element shunt is used to provide support for `max-height`. The
 * `max-height` property has no affect when using a percentage-padding to set
 * the aspect ratio.
 */
.aspect-ratio:before {
  content: "";
  display: block;
  width: 100%; }

/**
 * Descendant: media element
 *
 * Utility of the component is improved by provide an explicit descendant
 * class. However, it will work automatically for iframes, embeds, and objects
 * to account for times when you cannot modify the attributes for 3rd party
 * widget code.
 */
.aspect-ratio__item, .aspect-ratio iframe, .aspect-ratio embed, .aspect-ratio object {
  bottom: 0;
  left: 0;
  position: absolute;
  top: 0;
  width: 100%; }

.aspect-ratio iframe, .aspect-ratio embed, .aspect-ratio object {
  height: 100%; }

.page-head {
  background: #000;
  padding-top: 1.25em;
  padding-bottom: 1.25em; }

.logo {
  max-width: 30em;
  margin: 3em auto 1em;
  color: #c2af75; }

.logo__dot {
  font-size: 1.5em;
  line-height: 1;
  display: inline-block;
  margin: 0 0.01em;
  position: relative;
  top: 0.1em; }

/*
    variations
*/
.logo--compact {
  text-align: left;
  float: left;
  margin: 0; }
  .logo--compact .logo__text {
    font-size: 1em; }
  .logo--compact .logo__dot {
    font-size: 0.75em; }

/*
    main nav
*/
.main-nav a {
  padding: 0.3em; }

.timeline {
  border-top: 1px solid #000;
  margin-bottom: 2.5em; }

.timeline-event {
  position: relative;
  padding-left: 20%;
  border-bottom: 2px solid #c2af75; }

.timeline-event__wrap {
  border-left: 2px solid #c2af75;
  padding: 0.9375em 1.875em; }

.timeline-event__title {
  position: relative;
  font-size: 1.375em;
  left: -1.3636363636em;
  padding-left: 1.3636363636em; }
  .timeline-event__title:after {
    content: '';
    display: block;
    width: 25px;
    height: 25px;
    background: white;
    border-radius: 25px;
    border: 3px solid #c2af75;
    position: absolute;
    top: 2px;
    left: -13px; }

.timeline-event__date {
  position: absolute;
  top: 1.25em;
  left: 0;
  word-wrap: break-word;
  width: 20%; }

.constrict {
  max-width: 50.625em;
  padding-left: 0.625em;
  padding-right: 0.625em;
  margin: 0 auto; }

.home {
  background: black; }

/*  ==========================================================================
    Generic:Widths
    ========================================================================== */
/*
    Sizes in human readable format. These are used in conjunction with other
    objects and abstractions, most commonly the grid system.

    We have a mixin to generate our widths and their breakpoint-specific
    variations.
*/
/*
        Whole
        -----
    */
.one-whole {
  width: 100%; }

/*
        Halves
        ------
    */
.one-half, .two-quarters, .three-sixths, .four-eighths, .five-tenths, .six-twelfths {
  width: 50%; }

/*
        Thirds
        ------
    */
.one-third, .two-sixths, .four-twelfths {
  width: 33.3333333%; }

.two-thirds, .four-sixths, .eight-twelfths {
  width: 66.6666666%; }

/*
        Quarters
        --------
    */
.one-quarter, .two-eighths, .three-twelfths {
  width: 25%; }

.three-quarters, .six-eighths, .nine-twelfths {
  width: 75%; }

/*
        Fifths
        ------
    */
.one-fifth, .two-tenths {
  width: 20%; }

.two-fifths, .four-tenths {
  width: 40%; }

.three-fifths, .six-tenths {
  width: 60%; }

.four-fifths, .eight-tenths {
  width: 80%; }

/*
        Sixths
        ------
    */
.one-sixth, .two-twelfths {
  width: 16.6666666%; }

.five-sixths, .ten-twelfths {
  width: 83.3333333%; }

/*
        Eighths
        -------
    */
.one-eighth {
  width: 12.5%; }

.three-eighths {
  width: 37.5%; }

.five-eighths {
  width: 62.5%; }

.seven-eighths {
  width: 87.5%; }

/*
        Ninths
        ------
    */
.one-ninth {
  width: 11.1111111%; }

.two-ninths {
  width: 22.2222222%; }

.four-ninths {
  width: 44.4444444%; }

.five-ninths {
  width: 55.5555555%; }

.seven-ninths {
  width: 77.7777777%; }

.eight-ninths {
  width: 88.8888888%; }

/*
        Tenths
        ------
    */
.one-tenth {
  width: 10%; }

.three-tenths {
  width: 30%; }

.seven-tenths {
  width: 70%; }

.nine-tenths {
  width: 90%; }

/*
        Twelfths
        --------
    */
.one-twelfth {
  width: 8.3333333%; }

.five-twelfths {
  width: 41.6666666%; }

.seven-twelfths {
  width: 58.3333333%; }

.eleven-twelfths {
  width: 91.6666666%; }

@media (min-width: bp-size(400px)) {
  /*
        Whole
        -----
    */
  .small-one-whole {
    width: 100%; }

  /*
        Halves
        ------
    */
  .small-one-half, .small-two-quarters, .small-three-sixths, .small-four-eighths, .small-five-tenths, .small-six-twelfths {
    width: 50%; }

  /*
        Thirds
        ------
    */
  .small-one-third, .small-two-sixths, .small-four-twelfths {
    width: 33.3333333%; }

  .small-two-thirds, .small-four-sixths, .small-eight-twelfths {
    width: 66.6666666%; }

  /*
        Quarters
        --------
    */
  .small-one-quarter, .small-two-eighths, .small-three-twelfths {
    width: 25%; }


  .small-three-quarters, .small-six-eighths, .small-nine-twelfths {
    width: 75%; }

  /*
        Fifths
        ------
    */
  .small-one-fifth, .small-two-tenths {
    width: 20%; }

  .small-two-fifths, .small-four-tenths {
    width: 40%; }

  .small-three-fifths, .small-six-tenths {
    width: 60%; }

  .small-four-fifths, .small-eight-tenths {
    width: 80%; }

  /*
        Sixths
        ------
    */
  .small-one-sixth, .small-two-twelfths {
    width: 16.6666666%; }




  .small-five-sixths, .small-ten-twelfths {
    width: 83.3333333%; }

  /*
        Eighths
        -------
    */
  .small-one-eighth {
    width: 12.5%; }


  .small-three-eighths {
    width: 37.5%; }


  .small-five-eighths {
    width: 62.5%; }


  .small-seven-eighths {
    width: 87.5%; }

  /*
        Ninths
        ------
    */
  .small-one-ninth {
    width: 11.1111111%; }

  .small-two-ninths {
    width: 22.2222222%; }

  .small-four-ninths {
    width: 44.4444444%; }

  .small-five-ninths {
    width: 55.5555555%; }

  .small-seven-ninths {
    width: 77.7777777%; }

  .small-eight-ninths {
    width: 88.8888888%; }

  /*
        Tenths
        ------
    */
  .small-one-tenth {
    width: 10%; }


  .small-three-tenths {
    width: 30%; }




  .small-seven-tenths {
    width: 70%; }


  .small-nine-tenths {
    width: 90%; }

  /*
        Twelfths
        --------
    */
  .small-one-twelfth {
    width: 8.3333333%; }




  .small-five-twelfths {
    width: 41.6666666%; }


  .small-seven-twelfths {
    width: 58.3333333%; }




  .small-eleven-twelfths {
    width: 91.6666666%; }
 }

@media (min-width: bp-size(550px)) {
  /*
        Whole
        -----
    */
  .medium-one-whole {
    width: 100%; }

  /*
        Halves
        ------
    */
  .medium-one-half, .medium-two-quarters, .medium-three-sixths, .medium-four-eighths, .medium-five-tenths, .medium-six-twelfths {
    width: 50%; }

  /*
        Thirds
        ------
    */
  .medium-one-third, .medium-two-sixths, .medium-four-twelfths {
    width: 33.3333333%; }

  .medium-two-thirds, .medium-four-sixths, .medium-eight-twelfths {
    width: 66.6666666%; }

  /*
        Quarters
        --------
    */
  .medium-one-quarter, .medium-two-eighths, .medium-three-twelfths {
    width: 25%; }


  .medium-three-quarters, .medium-six-eighths, .medium-nine-twelfths {
    width: 75%; }

  /*
        Fifths
        ------
    */
  .medium-one-fifth, .medium-two-tenths {
    width: 20%; }

  .medium-two-fifths, .medium-four-tenths {
    width: 40%; }

  .medium-three-fifths, .medium-six-tenths {
    width: 60%; }

  .medium-four-fifths, .medium-eight-tenths {
    width: 80%; }

  /*
        Sixths
        ------
    */
  .medium-one-sixth, .medium-two-twelfths {
    width: 16.6666666%; }




  .medium-five-sixths, .medium-ten-twelfths {
    width: 83.3333333%; }

  /*
        Eighths
        -------
    */
  .medium-one-eighth {
    width: 12.5%; }


  .medium-three-eighths {
    width: 37.5%; }


  .medium-five-eighths {
    width: 62.5%; }


  .medium-seven-eighths {
    width: 87.5%; }

  /*
        Ninths
        ------
    */
  .medium-one-ninth {
    width: 11.1111111%; }

  .medium-two-ninths {
    width: 22.2222222%; }

  .medium-four-ninths {
    width: 44.4444444%; }

  .medium-five-ninths {
    width: 55.5555555%; }

  .medium-seven-ninths {
    width: 77.7777777%; }

  .medium-eight-ninths {
    width: 88.8888888%; }

  /*
        Tenths
        ------
    */
  .medium-one-tenth {
    width: 10%; }


  .medium-three-tenths {
    width: 30%; }




  .medium-seven-tenths {
    width: 70%; }


  .medium-nine-tenths {
    width: 90%; }

  /*
        Twelfths
        --------
    */
  .medium-one-twelfth {
    width: 8.3333333%; }




  .medium-five-twelfths {
    width: 41.6666666%; }


  .medium-seven-twelfths {
    width: 58.3333333%; }




  .medium-eleven-twelfths {
    width: 91.6666666%; }
 }

@media (min-width: bp-size(700px)) {
  /*
        Whole
        -----
    */
  .large-one-whole {
    width: 100%; }

  /*
        Halves
        ------
    */
  .large-one-half, .large-two-quarters, .large-three-sixths, .large-four-eighths, .large-five-tenths, .large-six-twelfths {
    width: 50%; }

  /*
        Thirds
        ------
    */
  .large-one-third, .large-two-sixths, .large-four-twelfths {
    width: 33.3333333%; }

  .large-two-thirds, .large-four-sixths, .large-eight-twelfths {
    width: 66.6666666%; }

  /*
        Quarters
        --------
    */
  .large-one-quarter, .large-two-eighths, .large-three-twelfths {
    width: 25%; }


  .large-three-quarters, .large-six-eighths, .large-nine-twelfths {
    width: 75%; }

  /*
        Fifths
        ------
    */
  .large-one-fifth, .large-two-tenths {
    width: 20%; }

  .large-two-fifths, .large-four-tenths {
    width: 40%; }

  .large-three-fifths, .large-six-tenths {
    width: 60%; }

  .large-four-fifths, .large-eight-tenths {
    width: 80%; }

  /*
        Sixths
        ------
    */
  .large-one-sixth, .large-two-twelfths {
    width: 16.6666666%; }




  .large-five-sixths, .large-ten-twelfths {
    width: 83.3333333%; }

  /*
        Eighths
        -------
    */
  .large-one-eighth {
    width: 12.5%; }


  .large-three-eighths {
    width: 37.5%; }


  .large-five-eighths {
    width: 62.5%; }


  .large-seven-eighths {
    width: 87.5%; }

  /*
        Ninths
        ------
    */
  .large-one-ninth {
    width: 11.1111111%; }

  .large-two-ninths {
    width: 22.2222222%; }

  .large-four-ninths {
    width: 44.4444444%; }

  .large-five-ninths {
    width: 55.5555555%; }

  .large-seven-ninths {
    width: 77.7777777%; }

  .large-eight-ninths {
    width: 88.8888888%; }

  /*
        Tenths
        ------
    */
  .large-one-tenth {
    width: 10%; }


  .large-three-tenths {
    width: 30%; }




  .large-seven-tenths {
    width: 70%; }


  .large-nine-tenths {
    width: 90%; }

  /*
        Twelfths
        --------
    */
  .large-one-twelfth {
    width: 8.3333333%; }




  .large-five-twelfths {
    width: 41.6666666%; }


  .large-seven-twelfths {
    width: 58.3333333%; }




  .large-eleven-twelfths {
    width: 91.6666666%; }
 }

/*  ==========================================================================
    Generic:Helpers:Layout
    ========================================================================== */
/*
    Contain floats
    --------------

    Make an element expand to contain floated children.
    Uses pseudo-elements (micro clearfix).

    1. The space content is one way to avoid an Opera bug when the
        `contenteditable` attribute is included anywhere else in the document.
        Otherwise it causes space to appear at the top and bottom of the
        element.
    2. The use of `table` rather than `block` is only necessary if using
        `:before` to contain the top-margins of child elements.
 */
.cf:before, .nav:before, .cf:after, .nav:after, .group:before, .group:after {
  content: "";
  /* 1 */
  display: table
  /* 2 */ }
.cf:after, .nav:after, .group:after {
  clear: both; }

/*
    Floats
*/
.float--right {
  float: right !important; }

.float--left {
  float: left !important; }

/* ==========================================================================
   Generic:Helpers:State
   ========================================================================== */
/*
    Completely remove from the flow and screen readers.
*/
.is-hidden {
  display: none !important;
  visibility: hidden !important; }

/*
    Completely remove from the flow but leave available to screen readers.
*/
.is-hidden-visually {
  position: absolute;
  overflow: hidden;
  width: 1px;
  height: 1px;
  padding: 0;
  border: 0;
  clip: rect(1px, 1px, 1px, 1px); }

/*
    Control visibility without affecting flow.
*/
.is-invisible {
  visibility: hidden !important; }

.is-visible {
  visibility: visible !important; }

/*  ==========================================================================
    Generic:Helpers:Text
    ========================================================================== */
/*
    Text alignment
*/
.text--left {
  text-align: left !important; }

.text--center {
  text-align: center !important; }

.text--right {
  text-align: right !important; }

/*
    Apply capital case to an element (usually a `strong`).
*/
.caps {
  text-transform: uppercase !important; }

/**
 * Font weights
 */
.weight--light {
  font-weight: 300 !important; }

.weight--normal {
  font-weight: 400 !important; }

.weight--semibold {
  font-weight: 600 !important; }

/*
    font sizes
*/
.alpha {
  font-size: 2em; }

.beta {
  font-size: 1.625em; }

.gamma {
  font-size: 1.375em; }

.delta {
  font-size: 1.25em; }

.epsilon {
  font-size: 1.125em; }

.zeta {
  font-size: 1.0625em; }

/*  ==========================================================================
    Generic:Helpers:Spacing
    ========================================================================== */
/*
    add/remove margins
*/
.push {
  margin: 40px !important; }

.push--top {
  margin-top: 40px !important; }

.push--right {
  margin-right: 40px !important; }

.push--bottom {
  margin-bottom: 40px !important; }

.push--left {
  margin-left: 40px !important; }

.push--ends {
  margin-top: 40px !important;
  margin-bottom: 40px !important; }

.push--sides {
  margin-right: 40px !important;
  margin-left: 40px !important; }

.flush {
  margin: 0 !important; }

.flush--top {
  margin-top: 0 !important; }

.flush--right {
  margin-right: 0 !important; }

.flush--bottom {
  margin-bottom: 0 !important; }

.flush--left {
  margin-left: 0 !important; }

.flush--ends {
  margin-top: 0 !important;
  margin-bottom: 0 !important; }

.flush--sides {
  margin-right: 0 !important;
  margin-left: 0 !important; }

/*
    remove paddings
*/
.hard {
  padding: 0 !important; }

.hard--top {
  padding-top: 0 !important; }

.hard--right {
  padding-right: 0 !important; }

.hard--bottom {
  padding-bottom: 0 !important; }

.hard--left {
  padding-left: 0 !important; }

.hard--ends {
  padding-top: 0 !important;
  padding-bottom: 0 !important; }

.hard--sides {
  padding-right: 0 !important;
  padding-left: 0 !important; }
